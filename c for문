# c-study
#include <stdio.h>

int main() {

	/*문법*/

	for (초기화식; 조건식; 증감식;) {
		실행문;
	}
	/* 실행순서
	   1. 초기화식
	   2. 조건식true 면→3 false 면 for문 종료
	   3. 실행문 실행
	   4. 증감식 실행후 →2
	 */

	/*for문의 생략*/

	int i = 0;
	//초기화식 생략
	for (; i < 10; i++) {
		printf("%d", i);
	}
	//조건식 생략 (무한루프에 빠짐)
	for (i = 0; ; i++) {
		printf("%d", i);
	}
	//증감식 생략 (무한루프에 빠짐)
	for (i = 0; i < 10;) {
		printf("%d", i);
	}
	//실행식이 하나일시 대괄호 생략가능
	for (; i < 10; i++)	printf("%d", i);

	/*반복문의 생략과 탈출*/
	//예제
	for (int i = 0; i < 5; i++) {
		for (int j = 0; j < 5; j++) {
			printf("Inner Loop\n");//25번 반복됨
		}
		printf("Outter Loop\n");//5번 반복됨
	}//일반적인 2중 for문, 내부 for문 5번을 돌고 외부 5번을 돌아 총25번 반복

	//break문
	for (int i = 0; i < 5; i++) {
		for (int j = 0; j < 5; j++) {
			printf("Inner Loop\n");
			break;//현재 돌아가는 내부for문을 탈출함
			printf("break문 뒷 코드는 실행되지 않습니다.\n");
		}
		printf("Outter Loop\n");
	}//break문은 가장 가까운 루프를 탈출함 으로 break문이 실행됨으로 외부 for문으로 돌아감

	//continue문
	for (int i = 0; i < 5; i++) {
		for (int j = 0; j < 5; j++) {
			printf("Inner Loop\n");
			continue;//for문의 다음회차로 넘어감
			printf("continue문 뒷 코드는 실행되지 않습니다.\n");
		}
		printf("Outter Loop\n");
	}//break문은 해당 반복문의 다음 회차로 직행함으로 다음에 있을 명령어들을 실행하지 않음

	//return문
	for (int i = 0; i < 5; i++) {
		for (int j = 0; j < 5; j++) {
			printf("Inner Loop\n");
			return 0;
			printf("메서드가 종료됩니다.\n");
		}
		printf("Outter Loop\n");
	}//return 문은 실행즉시 메서드 자체를 빠져나옴,
	 //main함수에서 사용하게되면 main함수를 빠져나오기에 프로그램이 종료됨

	return 0;
}
